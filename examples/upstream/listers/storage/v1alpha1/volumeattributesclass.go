/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	kcpcache "github.com/kcp-dev/apimachinery/v2/pkg/cache"
	"github.com/kcp-dev/logicalcluster/v3"
	v1alpha1 "k8s.io/api/storage/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VolumeAttributesClassLister helps list VolumeAttributesClasses.
// All objects returned here must be treated as read-only.
type VolumeAttributesClassLister interface {
	// List lists all VolumeAttributesClasses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VolumeAttributesClass, err error)
	// Get retrieves the VolumeAttributesClass from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.VolumeAttributesClass, error)
	VolumeAttributesClassListerExpansion
}

// VolumeAttributesClassClusterLister helps list VolumeAttributesClasses.
// All objects returned here must be treated as read-only.
type VolumeAttributesClassClusterLister interface {
	// List lists all VolumeAttributesClasses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VolumeAttributesClass, err error)
	VolumeAttributesClassClusterListerExpansion
}

// volumeAttributesClassLister implements the VolumeAttributesClassLister interface.
type volumeAttributesClassLister struct {
	indexer     cache.Indexer
	clusterName logicalcluster.Name
}

// volumeAttributesClassLister implements the VolumeAttributesClassClusterLister interface.
type volumeAttributesClassClusterLister struct {
	indexer cache.Indexer
}

// Cluster scopes the lister to one workspace, allowing users to list and get VolumeAttributesClass.
func (s *volumeAttributesClassClusterLister) Cluster(clusterName logicalcluster.Name) VolumeAttributesClassLister {
	return &volumeAttributesClassLister{indexer: s.indexer, clusterName: clusterName}
}

// List lists all VolumeAttributesClasses in the indexer.
func (s *volumeAttributesClassLister) List(selector labels.Selector) (ret []*v1alpha1.VolumeAttributesClass, err error) {
	err = kcpcache.ListAllByCluster(s.indexer, s.clusterName, selector, func(i interface{}) {
		ret = append(ret, i.(*v1alpha1.VolumeAttributesClass))
	})
	return ret, err
}

// List lists all VolumeAttributesClasses in the indexer.
func (s *volumeAttributesClassClusterLister) List(selector labels.Selector) (ret []*v1alpha1.VolumeAttributesClass, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VolumeAttributesClass))
	})
	return ret, err
}

// NewVolumeAttributesClassClusterLister returns a new VolumeAttributesClassClusterLister.
func NewVolumeAttributesClassClusterLister(indexer cache.Indexer) VolumeAttributesClassClusterLister {
	return &volumeAttributesClassClusterLister{
		indexer: indexer,
	}
}

// Get retrieves the VolumeAttributesClass from the index for a given name.
func (s volumeAttributesClassLister) Get(name string) (*v1alpha1.VolumeAttributesClass, error) {
	key := kcpcache.ToClusterAwareKey(s.clusterName.String(), "", name)
	obj, exists, err := s.indexer.GetByKey(key)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("volumeattributesclass"), name)
	}
	return obj.(*v1alpha1.VolumeAttributesClass), nil
}
