/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/kcp-dev/logicalcluster/v3"
	v1alpha1 "k8s.io/api/imagepolicy/v1alpha1"
	gentype "k8s.io/client-go/gentype"
	imagepolicyv1alpha1client "k8s.io/client-go/kuberentes/typed/imagepolicy/v1alpha1"
	scheme "k8s.io/code-generator/examples/upstream/clientset/versioned/scheme"
)

// ImageReviewsClusterGetter has a method to return a ImageReviewClusterInterface.
// A group's client should implement this interface.
type ImageReviewsClusterGetter interface {
	ImageReviews() ImageReviewClusterInterface
}

// ImageReviewInterface has methods to work with ImageReview resources.
type ImageReviewClusterInterface interface {
	Cluster(logicalcluster.Path) imagepolicyv1alpha1client.ImageReviewInterface

	ImageReviewExpansion
}

// imageReviews implements ImageReviewInterface
type imageReviews struct {
	*gentype.Client[*v1alpha1.ImageReview]
}

// newImageReviews returns a ImageReviews
func newImageReviews(c *ImagepolicyV1alpha1Client) *imageReviews {
	return &imageReviews{
		gentype.NewClient[*v1alpha1.ImageReview](
			"imagereviews",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1alpha1.ImageReview { return &v1alpha1.ImageReview{} }),
	}
}
