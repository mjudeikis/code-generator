/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1beta2

import (
	"context"

	"github.com/kcp-dev/logicalcluster/v3"
	v1beta2 "k8s.io/api/apps/v1beta2"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
	appsv1beta2client "k8s.io/client-go/kuberentes/typed/apps/v1beta2"
	appsv1beta2 "k8s.io/code-generator/examples/upstream/applyconfiguration/apps/v1beta2"
	scheme "k8s.io/code-generator/examples/upstream/clientset/versioned/scheme"
)

// DeploymentsClusterGetter has a method to return a DeploymentClusterInterface.
// A group's client should implement this interface.
type DeploymentsClusterGetter interface {
	Deployments(namespace string) DeploymentClusterInterface
}

// DeploymentInterface has methods to work with Deployment resources.
type DeploymentClusterInterface interface {
	Cluster(logicalcluster.Path) appsv1beta2client.DeploymentInterface

	List(ctx context.Context, opts v1.ListOptions) (*v1beta2.DeploymentList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	DeploymentExpansion
}

// deployments implements DeploymentInterface
type deployments struct {
	*gentype.ClientWithListAndApply[*v1beta2.Deployment, *v1beta2.DeploymentList, *appsv1beta2.DeploymentApplyConfiguration]
}

// newDeployments returns a Deployments
func newDeployments(c *AppsV1beta2Client, namespace string) *deployments {
	return &deployments{
		gentype.NewClientWithListAndApply[*v1beta2.Deployment, *v1beta2.DeploymentList, *appsv1beta2.DeploymentApplyConfiguration](
			"deployments",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1beta2.Deployment { return &v1beta2.Deployment{} },
			func() *v1beta2.DeploymentList { return &v1beta2.DeploymentList{} }),
	}
}
